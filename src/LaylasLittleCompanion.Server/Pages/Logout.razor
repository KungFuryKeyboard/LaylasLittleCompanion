@page "/logout"

@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@inject IHttpContextAccessor _contextAccessor
@inject NavigationManager Nav

@code {

	protected override async Task OnInitializedAsync()
	{
		await _contextAccessor.HttpContext.SignOutAsync(CookieAuthenticationDefaults.AuthenticationScheme);
		

		Nav.NavigateTo("/");

	}
}


@*

	Http.DefaultRequestHeaders.Remove("Client-Id");
			if (Http.DefaultRequestHeaders.Contains("api-key")) {
				Http.DefaultRequestHeaders.Remove("api-key");
			}
			if (Http.DefaultRequestHeaders.Contains(ClientConstants.KlipTokTokenHeaderName)) {
				Http.DefaultRequestHeaders.Remove(ClientConstants.KlipTokTokenHeaderName);
			}
			var response = await Http.PostAsync($"https://id.twitch.tv/oauth2/revoke?client_id={Config["twitch.clientid"]}&token={User.AccessToken}", new StringContent(""));
			Http.DefaultRequestHeaders.Add("Client-Id", Config["twitch.clientid"]);

			var localTask = localStorage.ClearAsync();
			var logoutTask = User.Logout(Http);
			await Task.WhenAll(localTask.AsTask(), logoutTask);

			Nav.NavigateTo("/", forceLoad: true);
*@